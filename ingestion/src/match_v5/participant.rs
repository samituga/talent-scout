// use anyhow::Result;
// use riven::{consts, models::match_v5};
// use sqlx::{PgPool, QueryBuilder};
//
// /// Inserts a batch of participants into the DB for the given match.
// pub async fn insert_participants(
//     pool: &PgPool,
//     match_id: &str,
//     participants: &[match_v5::Participant],
// ) -> Result<(), sqlx::Error> {
//     if participants.is_empty() {
//         return Ok(());
//     }
//
//     let mut qb = QueryBuilder::new(
//         r#"
//             INSERT INTO match_v5.participant (
//                 match_id,
//                 participant_id,
//                 all_in_pings,
//                 assist_me_pings,
//                 assists,
//                 baron_kills,
//                 bounty_level,
//                 champ_experience,
//                 champ_level,
//                 champion_id,
//                 champion_name,
//                 command_pings,
//                 champion_transform,
//                 consumables_purchased,
//                 challenges,
//                 damage_dealt_to_buildings,
//                 damage_dealt_to_objectives,
//                 damage_dealt_to_turrets,
//                 damage_self_mitigated,
//                 deaths,
//                 detector_wards_placed,
//                 double_kills,
//                 dragon_kills,
//                 eligible_for_progression,
//                 enemy_missing_pings,
//                 enemy_vision_pings,
//                 first_blood_assist,
//                 first_blood_kill,
//                 first_tower_assist,
//                 first_tower_kill,
//                 game_ended_in_early_surrender,
//                 game_ended_in_surrender,
//                 hold_pings,
//                 get_back_pings,
//                 gold_earned,
//                 gold_spent,
//                 individual_position,
//                 inhibitor_kills,
//                 inhibitor_takedowns,
//                 inhibitors_lost,
//                 item0,
//                 item1,
//                 item2,
//                 item3,
//                 item4,
//                 item5,
//                 item6,
//                 items_purchased,
//                 killing_sprees,
//                 kills,
//                 lane,
//                 largest_critical_strike,
//                 largest_killing_spree,
//                 largest_multi_kill,
//                 longest_time_spent_living,
//                 magic_damage_dealt,
//                 magic_damage_dealt_to_champions,
//                 magic_damage_taken,
//                 neutral_minions_killed,
//                 need_vision_pings,
//                 nexus_kills,
//                 nexus_takedowns,
//                 nexus_lost,
//                 objectives_stolen,
//                 objectives_stolen_assists,
//                 on_my_way_pings,
//                 participant_id,
//                 player_score0,
//                 player_score1,
//                 player_score2,
//                 player_score3,
//                 player_score4,
//                 player_score5,
//                 player_score6,
//                 player_score7,
//                 player_score8,
//                 player_score9,
//                 player_score10,
//                 player_score11,
//                 penta_kills,
//                 physical_damage_dealt,
//                 physical_damage_dealt_to_champions,
//                 physical_damage_taken,
//                 placement,
//                 player_augment1,
//                 player_augment2,
//                 player_augment3,
//                 player_augment4,
//                 player_subteam_id,
//                 push_pings,
//                 profile_icon,
//                 puuid,
//                 quadra_kills,
//                 riot_id_game_name,
//                 riot_id_tagline,
//                 role,
//                 sight_wards_bought_in_game,
//                 spell1_casts,
//                 spell2_casts,
//                 spell3_casts,
//                 spell4_casts,
//                 subteam_placement,
//                 summoner1_casts,
//                 summoner1_id,
//                 summoner2_casts,
//                 summoner2_id,
//                 summoner_id,
//                 summoner_level,
//                 summoner_name,
//                 team_early_surrendered,
//                 team_id,
//                 team_position,
//                 time_ccing_others,
//                 time_played,
//                 total_ally_jungle_minions_killed,
//                 total_damage_dealt,
//                 total_damage_dealt_to_champions,
//                 total_damage_shielded_on_teammates,
//                 total_damage_taken,
//                 total_heal,
//                 total_heals_on_teammates,
//                 total_minions_killed,
//                 total_time_cc_dealt,
//                 total_time_spent_dead,
//                 total_units_healed,
//                 triple_kills,
//                 true_damage_dealt,
//                 true_damage_dealt_to_champions,
//                 true_damage_taken,
//                 turret_kills,
//                 turret_takedowns,
//                 turrets_lost,
//                 unreal_kills,
//                 vision_score,
//                 vision_cleared_pings,
//                 vision_wards_bought_in_game,
//                 wards_killed,
//                 wards_placed,
//                 win,
//                 bait_pings,
//                 danger_pings,
//                 basic_pings,
//                 player_augment5,
//                 player_augment6,
//                 riot_id_name,
//                 retreat_pings
//             )
//             "#,
//     );
//
//     qb.push_values(participants, |mut b, participant| {
//         let champion_id = participant
//             .champion()
//             .expect("FromStr imp for String is be infallible")
//             .name()
//             .expect("Champion without name representation");
//
//         let team_id = team_to_str(participant.team_id);
//
//         b.push_bind(match_id)
//             .push_bind(participant.participant_id)
//             .push_bind(participant.all_in_pings)
//             .push_bind(participant.assist_me_pings)
//             .push_bind(participant.assists)
//             .push_bind(participant.baron_kills)
//             .push_bind(participant.bounty_level)
//             .push_bind(participant.champ_experience)
//             .push_bind(participant.champ_level)
//             .push_bind(champion_id)
//             .push_bind(&participant.champion_name)
//             .push_bind(participant.command_pings)
//             .push_bind(participant.champion_transform)
//             .push_bind(participant.consumables_purchased)
//             .push_bind(participant.damage_dealt_to_buildings)
//             .push_bind(participant.damage_dealt_to_objectives)
//             .push_bind(participant.damage_dealt_to_turrets)
//             .push_bind(participant.damage_self_mitigated)
//             .push_bind(participant.deaths)
//             .push_bind(participant.detector_wards_placed)
//             .push_bind(participant.double_kills)
//             .push_bind(participant.dragon_kills)
//             .push_bind(participant.eligible_for_progression)
//             .push_bind(participant.enemy_missing_pings)
//             .push_bind(participant.enemy_vision_pings)
//             .push_bind(participant.first_blood_assist)
//             .push_bind(participant.first_blood_kill)
//             .push_bind(participant.first_tower_assist)
//             .push_bind(participant.first_tower_kill)
//             .push_bind(participant.game_ended_in_early_surrender)
//             .push_bind(participant.game_ended_in_surrender)
//             .push_bind(participant.hold_pings)
//             .push_bind(participant.get_back_pings)
//             .push_bind(participant.gold_earned)
//             .push_bind(participant.gold_spent)
//             .push_bind(&participant.individual_position)
//             .push_bind(participant.inhibitor_kills)
//             .push_bind(participant.inhibitor_takedowns)
//             .push_bind(participant.inhibitors_lost)
//             .push_bind(participant.item0)
//             .push_bind(participant.item1)
//             .push_bind(participant.item2)
//             .push_bind(participant.item3)
//             .push_bind(participant.item4)
//             .push_bind(participant.item5)
//             .push_bind(participant.item6)
//             .push_bind(participant.items_purchased)
//             .push_bind(participant.killing_sprees)
//             .push_bind(participant.kills)
//             .push_bind(&participant.lane)
//             .push_bind(participant.largest_critical_strike)
//             .push_bind(participant.largest_killing_spree)
//             .push_bind(participant.largest_multi_kill)
//             .push_bind(participant.longest_time_spent_living)
//             .push_bind(participant.magic_damage_dealt)
//             .push_bind(participant.magic_damage_dealt_to_champions)
//             .push_bind(participant.magic_damage_taken)
//             .push_bind(participant.neutral_minions_killed)
//             .push_bind(participant.need_vision_pings)
//             .push_bind(participant.nexus_kills)
//             .push_bind(participant.nexus_takedowns)
//             .push_bind(participant.nexus_lost)
//             .push_bind(participant.objectives_stolen)
//             .push_bind(participant.objectives_stolen_assists)
//             .push_bind(participant.on_my_way_pings)
//             .push_bind(participant.participant_id)
//             .push_bind(participant.player_score0)
//             .push_bind(participant.player_score1)
//             .push_bind(participant.player_score2)
//             .push_bind(participant.player_score3)
//             .push_bind(participant.player_score4)
//             .push_bind(participant.player_score5)
//             .push_bind(participant.player_score6)
//             .push_bind(participant.player_score7)
//             .push_bind(participant.player_score8)
//             .push_bind(participant.player_score9)
//             .push_bind(participant.player_score10)
//             .push_bind(participant.player_score11)
//             .push_bind(participant.penta_kills)
//             .push_bind(participant.physical_damage_dealt)
//             .push_bind(participant.physical_damage_dealt_to_champions)
//             .push_bind(participant.physical_damage_taken)
//             .push_bind(participant.placement)
//             .push_bind(participant.player_augment1)
//             .push_bind(participant.player_augment2)
//             .push_bind(participant.player_augment3)
//             .push_bind(participant.player_augment4)
//             .push_bind(participant.player_subteam_id)
//             .push_bind(participant.push_pings)
//             .push_bind(participant.profile_icon)
//             .push_bind(&participant.puuid)
//             .push_bind(participant.quadra_kills)
//             .push_bind(&participant.riot_id_game_name)
//             .push_bind(&participant.riot_id_tagline)
//             .push_bind(&participant.role)
//             .push_bind(participant.sight_wards_bought_in_game)
//             .push_bind(participant.spell1_casts)
//             .push_bind(participant.spell2_casts)
//             .push_bind(participant.spell3_casts)
//             .push_bind(participant.spell4_casts)
//             .push_bind(participant.subteam_placement)
//             .push_bind(participant.summoner1_casts)
//             .push_bind(participant.summoner1_id)
//             .push_bind(participant.summoner2_casts)
//             .push_bind(participant.summoner2_id)
//             .push_bind(&participant.summoner_id)
//             .push_bind(participant.summoner_level)
//             .push_bind(&participant.summoner_name)
//             .push_bind(participant.team_early_surrendered)
//             .push_bind(team_id)
//             .push_bind(&participant.team_position)
//             .push_bind(participant.time_c_cing_others)
//             .push_bind(participant.time_played)
//             .push_bind(participant.total_ally_jungle_minions_killed)
//             .push_bind(participant.total_damage_dealt)
//             .push_bind(participant.total_damage_dealt_to_champions)
//             .push_bind(participant.total_damage_shielded_on_teammates)
//             .push_bind(participant.total_damage_taken)
//             .push_bind(participant.total_heal)
//             .push_bind(participant.total_heals_on_teammates)
//             .push_bind(participant.total_minions_killed)
//             .push_bind(participant.total_time_cc_dealt)
//             .push_bind(participant.total_time_spent_dead)
//             .push_bind(participant.total_units_healed)
//             .push_bind(participant.triple_kills)
//             .push_bind(participant.true_damage_dealt)
//             .push_bind(participant.true_damage_dealt_to_champions)
//             .push_bind(participant.true_damage_taken)
//             .push_bind(participant.turret_kills)
//             .push_bind(participant.turret_takedowns)
//             .push_bind(participant.turrets_lost)
//             .push_bind(participant.unreal_kills)
//             .push_bind(participant.vision_score)
//             .push_bind(participant.vision_cleared_pings)
//             .push_bind(participant.vision_wards_bought_in_game)
//             .push_bind(participant.wards_killed)
//             .push_bind(participant.wards_placed)
//             .push_bind(participant.win)
//             .push_bind(participant.bait_pings)
//             .push_bind(participant.danger_pings)
//             .push_bind(participant.basic_pings)
//             .push_bind(participant.player_augment5)
//             .push_bind(participant.player_augment6)
//             .push_bind(&participant.riot_id_name)
//             .push_bind(participant.retreat_pings);
//     });
//
//     qb.build().execute(pool).await?;
//     Ok(())
// }
//
// pub fn team_to_str(team: consts::Team) -> &'static str {
//     match team {
//         consts::Team::ZERO => "ZERO",
//         consts::Team::BLUE => "BLUE",
//         consts::Team::RED => "RED",
//         consts::Team::OTHER => "OTHER",
//     }
// }
