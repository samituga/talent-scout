//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

use super::sea_orm_active_enums::DamageDirection;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "match_v5", table_name = "match_timeline_victim_damage")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub event_timeline_id: Uuid,
    pub basic: bool,
    pub magic_damage: i32,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    pub participant_id: i32,
    pub physical_damage: i32,
    #[sea_orm(column_type = "Text")]
    pub spell_name: String,
    pub spell_slot: i32,
    pub true_damage: i32,
    #[sea_orm(column_type = "Text")]
    pub r#type: String,
    pub damage_direction: DamageDirection,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::events_timeline::Entity",
        from = "Column::EventTimelineId",
        to = "super::events_timeline::Column::EventTimelineId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    EventsTimeline,
}

impl Related<super::events_timeline::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::EventsTimeline.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
