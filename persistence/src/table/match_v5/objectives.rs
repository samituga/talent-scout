//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "match_v5", table_name = "objectives")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub match_id: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub team_id: i32,
    pub baron_first: bool,
    pub baron_kills: i32,
    pub champion_first: bool,
    pub champion_kills: i32,
    pub dragon_first: bool,
    pub dragon_kills: i32,
    pub horde_first: Option<bool>,
    pub horde_kills: Option<i32>,
    pub inhibitor_first: bool,
    pub inhibitor_kills: i32,
    pub rift_herald_first: bool,
    pub rift_herald_kills: i32,
    pub tower_first: bool,
    pub tower_kills: i32,
    pub atakhan_first: Option<bool>,
    pub atakhan_kills: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::teams::Entity",
        from = "(Column::MatchId, Column::TeamId)",
        to = "(super::teams::Column::MatchId, super::teams::Column::TeamId)",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Teams,
}

impl Related<super::teams::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Teams.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
